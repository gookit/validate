name: Unit-Tests
on:
  pull_request:
    paths:
      - 'go.mod'
      - '**.go'
      - '**.yml'

  push:
    paths:
      - 'go.mod'
      - '**.go'
      - '**.yml'

jobs:

  test:
    name: Test on go ${{ matrix.go_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: [1.18, 1.19, '1.20']
#        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup Go Faster
      uses: WillAbides/setup-go-faster@v1.9.0
      timeout-minutes: 3
      with:
        go-version: ${{ matrix.go_version }}

    - name: Run unit tests
#      run: go test -v -cover ./...
#      must add " for profile.cov on Windows OS
      run: go test -coverprofile="profile.cov" ./...

    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov
        flag-name: Go-${{ matrix.go_version }}
        parallel: true

  lint:
      name: linter
      runs-on: ubuntu-latest
      steps:
        - name: Check out code
          uses: actions/checkout@v3

        - name: Setup Go Faster
          uses: WillAbides/setup-go-faster@v1.9.0
          timeout-minutes: 3
          with:
            go-version: 1.19

        - name: golangci-lint
          uses: golangci/golangci-lint-action@v3
          with:
            # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
            version: v1.53

  # notifies that all test jobs are finished.
  finish:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
